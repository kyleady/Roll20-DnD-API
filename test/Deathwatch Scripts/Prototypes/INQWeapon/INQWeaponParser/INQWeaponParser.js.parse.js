var expect = require('chai').expect;
var fs = require('fs');
var path = require('path');
require('mock20');
describe('INQWeaponParser.prototype.parse()', function() {
	it('should parse a roll20 handout to detail itself', function(done){
		Campaign().MOCK20reset();
		var filePath = path.join(__dirname, '..', '..', '..', '..', '..', 'INQTotal.js');
		var MyScript = fs.readFileSync(filePath, 'utf8');
		eval(MyScript);
		MOCK20endOfLastScript();

		var text = '';
    text += '<strong>Class</strong>: Pistol';
    text += '<br>';
    text += '<strong>Range</strong>: 13m';
    text += '<br>';
    text += '<strong>RoF</strong>: S/PR/2PR';
    text += '<br>';
    text += '<strong>Dam</strong>: 2D5 + 5 I';
    text += '<br>';
    text += '<strong>Pen</strong>: 3D10+6';
    text += '<br>';
    text += '<strong>Clip</strong>: 14';
    text += '<br>';
    text += '<strong>Reload</strong>: 3Full';
    text += '<br>';
    text += '<strong>Special</strong>: Reliable, Razor Sharp';
    text += '<br>';
    text += '<strong>Weight</strong>: 10 kgs';
    text += '<br>';
    text += '<strong>Req</strong>: 13';
    text += '<br>';
    text += '<strong>Renown</strong>: -';
    text += '<br>';
    text += '<strong>Availability</strong>: Scarce';
    text += '<br>';
    text += '<strong>Focus Power</strong>: Opposed (+20) Toughness Test';

    var handout = createObj('handout', {name: 'INQWeapon handout'});
    handout.set('notes', text);
		var weaponparser = new INQWeaponParser();
    weaponparser.parse(handout, function(inqweapon){
			expect(inqweapon.Class).to.equal('Psychic');
			expect(inqweapon.Range).to.deep.equal(new INQFormula('13'));
			expect(inqweapon.Single).to.equal(true);
			expect(inqweapon.Semi).to.deep.equal(new INQFormula('PR'));
			expect(inqweapon.Full).to.deep.equal(new INQFormula('2PR'));
			expect(inqweapon.Damage).to.deep.equal(new INQFormula('2d5+5'));
			expect(inqweapon.DamageType).to.deep.equal(new INQLink('I'));
			expect(inqweapon.Penetration).to.deep.equal(new INQFormula('3D10+6'));
			expect(inqweapon.Clip).to.equal(14);
			expect(inqweapon.Reload).to.equal(3);
			expect(inqweapon.Special).to.deep.equal([new INQLink('Reliable'), new INQLink('Razor Sharp')]);
			expect(inqweapon.Weight).to.equal(10);
			expect(inqweapon.Requisition).to.equal(13);
			expect(inqweapon.Renown).to.equal('Initiate');
			expect(inqweapon.Availability).to.equal('Scarce');
			expect(inqweapon.FocusModifier).to.equal(20);
			expect(inqweapon.FocusTest).to.equal('Toughness');
			expect(inqweapon.Opposed).to.equal(true);
      done();
    });
  });
	it('should set the Class as Gear if the weapon does no damage and is not psychic', function(done){
		Campaign().MOCK20reset();
		var filePath = path.join(__dirname, '..', '..', '..', '..', '..', 'INQTotal.js');
		var MyScript = fs.readFileSync(filePath, 'utf8');
		eval(MyScript);
		MOCK20endOfLastScript();

		var text = '';
    text += '<strong>Class</strong>: Pistol';
    text += '<br>';
    text += '<strong>Range</strong>: 13m';
    text += '<br>';
    text += '<strong>RoF</strong>: S/PR/2PR';
    text += '<br>';
    text += '<strong>Pen</strong>: 3D10+6';
    text += '<br>';
    text += '<strong>Clip</strong>: 14';
    text += '<br>';
    text += '<strong>Reload</strong>: 3Full';
    text += '<br>';
    text += '<strong>Special</strong>: Reliable, Razor Sharp';
    text += '<br>';
    text += '<strong>Weight</strong>: 10 kgs';
    text += '<br>';
    text += '<strong>Req</strong>: 13';
    text += '<br>';
    text += '<strong>Renown</strong>: -';
    text += '<br>';
    text += '<strong>Availability</strong>: Scarce';

    var handout = createObj('handout', {name: 'INQWeapon handout'});
    handout.set('notes', text);
		var weaponparser = new INQWeaponParser();
		weaponparser.Damage = new INQFormula('0');
    weaponparser.parse(handout, function(inqweapon){
			expect(inqweapon.Class).to.equal('Gear');
			expect(inqweapon.Range).to.deep.equal(new INQFormula('13'));
			expect(inqweapon.Single).to.equal(true);
			expect(inqweapon.Semi).to.deep.equal(new INQFormula('PR'));
			expect(inqweapon.Full).to.deep.equal(new INQFormula('2PR'));
			expect(inqweapon.Damage).to.deep.equal(new INQFormula('0'));
			expect(inqweapon.Penetration).to.deep.equal(new INQFormula('3D10+6'));
			expect(inqweapon.Clip).to.equal(14);
			expect(inqweapon.Reload).to.equal(3);
			expect(inqweapon.Special).to.deep.equal([new INQLink('Reliable'), new INQLink('Razor Sharp')]);
			expect(inqweapon.Weight).to.equal(10);
			expect(inqweapon.Requisition).to.equal(13);
			expect(inqweapon.Renown).to.equal('Initiate');
			expect(inqweapon.Availability).to.equal('Scarce');
      done();
    });
  });
	it('should not be given the Class of Gear if it is Psychic', function(done){
		Campaign().MOCK20reset();
		var filePath = path.join(__dirname, '..', '..', '..', '..', '..', 'INQTotal.js');
		var MyScript = fs.readFileSync(filePath, 'utf8');
		eval(MyScript);
		MOCK20endOfLastScript();

		var text = '';
    text += '<strong>Class</strong>: Pistol';
    text += '<br>';
    text += '<strong>Range</strong>: 13m';
    text += '<br>';
    text += '<strong>RoF</strong>: S/PR/2PR';
    text += '<br>';
    text += '<strong>Pen</strong>: 3D10+6';
    text += '<br>';
    text += '<strong>Clip</strong>: 14';
    text += '<br>';
    text += '<strong>Reload</strong>: 3Full';
    text += '<br>';
    text += '<strong>Special</strong>: Reliable, Razor Sharp';
    text += '<br>';
    text += '<strong>Weight</strong>: 10 kgs';
    text += '<br>';
    text += '<strong>Req</strong>: 13';
    text += '<br>';
    text += '<strong>Renown</strong>: -';
    text += '<br>';
    text += '<strong>Availability</strong>: Scarce';
    text += '<br>';
    text += '<strong>Focus Power</strong>: Opposed (+20) Toughness Test';

    var handout = createObj('handout', {name: 'INQWeapon handout'});
    handout.set('notes', text);
		var weaponparser = new INQWeaponParser();
		weaponparser.Damage = new INQFormula('0');
    weaponparser.parse(handout, function(inqweapon){
			expect(inqweapon.Class).to.equal('Psychic');
			expect(inqweapon.Range).to.deep.equal(new INQFormula('13'));
			expect(inqweapon.Single).to.equal(true);
			expect(inqweapon.Semi).to.deep.equal(new INQFormula('PR'));
			expect(inqweapon.Full).to.deep.equal(new INQFormula('2PR'));
			expect(inqweapon.Penetration).to.deep.equal(new INQFormula('3D10+6'));
			expect(inqweapon.Clip).to.equal(14);
			expect(inqweapon.Reload).to.equal(3);
			expect(inqweapon.Special).to.deep.equal([new INQLink('Reliable'), new INQLink('Razor Sharp')]);
			expect(inqweapon.Weight).to.equal(10);
			expect(inqweapon.Requisition).to.equal(13);
			expect(inqweapon.Renown).to.equal('Initiate');
			expect(inqweapon.Availability).to.equal('Scarce');
			expect(inqweapon.FocusModifier).to.equal(20);
			expect(inqweapon.FocusTest).to.equal('Toughness');
			expect(inqweapon.Opposed).to.equal(true);
      done();
    });
  });
});
